<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BaVxpC2pca19qW2pZY1VjBf///wH///8B////Af//
        /wH///8B////AWNVYwVqW2pZalxrX2lcaQv///8B////AYyGlrO8xdbZvMXV2Yd/j5n///8B////Af//
        /wH///8B////Af///wGHf4+ZvMXV2bzF1tmMhpaz////AWiSxWGvs8LbqLLI96myyOuio7LraKbkX2in
        6GFop+hhaKfoYWin6GFopuRfoqOy66myyOuossj3r7PC22iTxmdopub7mZqs17bA0+e5w9XnjpKn1Wio
        6f9oqOn/aKjp/2io6f9oqOn/aKjp/46Sp9W5w9XntsDT55marNdopub7XWjK5WaPy9+AkbHLfI+xz2id
        2O9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9ondjvfI+xz4CRsctmnNDfW8Xv5V9dr99neqK9aH+nzWh9
        o8FofaPBaH+nzWd+pMFof6bLaH6lx2h9or1of6bLaH6lxWh/pcVof6bLZoSpu12z199Xz/HVWsnw41vK
        7+Nz2OHjdNjh43HR3uNx0d7jcdHe43HR3uNx0d7jZNDo3VfQ8tdX0PLXV9Dy11fQ8tdX0PLV////AWio
        6cWDt9nn//6U+/TjhuPw14D/8NeA//DXgP/w14D/8NeA+/DXgCv///8B////Af///wH///8B////Af//
        /wFoqekhaKfp5bPCr9HpxXj36cV49+nFePfpxXj36cV49+vKepH///8B////Af///wH///8B////Af//
        /wH///8B////AWqo6RNhtux3gsDKoZq9ssebvbLJm72yya68n5ncsnMT////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wFolsrbaICowWiUyd////8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BaKTjbWek43NopORz////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AWlc
        aSdpWmmpbF9t1Wpca89qWmqTY1VjE////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BY1VjE2paapNqXGvPbF9t1WlaaalpXGkn////Af///wH///8B////Af//
        /wFrWms/em5+177G1c/G0OD7xtHf97e9zMVwY3LXalVqGf///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AWpVahlwY3LXt73MxcbR3/fG0OD7vsbVz3puftdrWms/////Af//
        /wH///8BVVVVA25hb9PFzt3jv8na1ay2ysewuc7Bwczb5bvC0stqW2qp////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BaltqqbvC0svBzNvlsLnOway2yse/ydrVxc7d425h
        b9NVVVUD////Af///wFrWWsrkIyax8bQ3/2pssjlqLLI/6iyyP+stcvJxtDf/3Vpd9v///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wF1aXfbxtDf/6y1y8mossj/qLLI/6my
        yOXG0N/9kIyax2tZayv///8BaKjpq2mLuK2bmanBxM7d6aiyyP2ossj/qLLI/6myyePG0N//fXWE12il
        4b1op+jBaKfowWin6MFop+jBaKfowWin6MFop+jBaKfowWin6MFop+jBaKXhvX11hNfG0N//qbLJ46iy
        yP+ossj/qLLI/cTO3embmanBaYu4rWin6MFoqOn/aKHg7X50hNfG0N//rbfMxaiyyP+ossj9tb7SwcbP
        3vFsYXHbaKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/bGFx28bP
        3vG1vtLBqLLI/aiyyP+tt8zFxtDf/350hNdooeDtaKjp/2io6f9oqOn/aWqDw62xv8HG0N//v8jZ18HM
        3OPG0OD7lJCfxWmBqcNoqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io
        6f9pganDlJCfxcbQ4PvBzNzjv8jZ18bQ3/+tsb/BaWqDw2io6f9oqOn/YH3UxWON3M9opOPzaWZ+xYiC
        kc2tr77Bqqu6v351hNVodJS/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io
        6f9oqOn/aKjp/2io6f9odJS/fnWE1aqrur+tr77BiIKRzWlmfsVopOPzY7Xsz1+77cVaUb//WlG//2KA
        18VoqOn/aJbM2WmBqMNohK/FaJ3Y42io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io
        6f9oqOn/aKjp/2io6f9oqOn/aKjp/2io6f9ondjjaISvxWmBqMNolszZaKjp/2C67sVX0PL/V9Dy/1pR
        v/9bUcD1ZnmwuWePwM9pcI3BaZ7b52lykcFojLzNaIy8zWlykcFon9vnaXCNwWePwM9piLXHaXaXwWif
        2edobIfBaJPI1WiDrMVoe6DBaJrS32hsh8FomdDban6lwWp+pcFomdDbaGyHwWia0t9oe6DBYqHIt1fQ
        8vlX0PL/Z12AyWeBuL1pdJG3aW2HuWmNu8NoYHPJZ4i1wWhviblob4m5aIi1wWlhdMlpi7rDaW2HuWd0
        kbdnhK69aWBzyWiRwsloaIG9aXaZt2iApbtpY3jDaY/By2hme8Foe6K5aX2iuWhme8FokcHJaWJ4w2iA
        pbtpdpm3ZnSMu2Sl2clX0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ
        8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fQ
        8v9X0PL/V9Dy/1fQ8v9X0PL/V9Dy/1fR86VZzvG1XsHvyV7B78lewe/JZsbpyZfizsma48zJmuPMyZji
        zcmU1MbJk9PFyZPTxcmT08XJk9PFyZPTxcmT08XJk9PFyZPTxcmT08XJkdLGyVfR8rFX0fKxV9HysVfR
        8rFX0fKxV9HysVfR8rFX0fKxV9HysVfR8rFX0fOl////AYC//wVoqOnVaKjp/2io6f/T5q+///+V////
        lf///pT58duDyfDXgP/w14D/8NeA//DXgP/w14D/8NeA//DXgP/w14D/8NeA//DXgP/w14CZ////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AWmp6UVoqOn/aKjp/4C1
        3OH//5X1//6U+fHbg8nw14D/8NeA//DXgP/w14D/8NeA//DXgP/w14D/8NeA//DXgP/w14D/8NeA8fPb
        hhX///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AWip
        6X9oqOn/aKjp/8Datr/x24PJ8NeA//DXgP/w14D/8NeA//DXgP/w14D/8NeA//DXgP/w14D/8NeA//DX
        gP/v14Bz////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AWmn6ZdoqOn/barm/cazjr3jtHDx47Rw8eO0cPHjtHDx47Rw8eO0cPHjtHDx47Rw8eO0
        cPHjtHDx5LVxzf/MZgX///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AWqo6UdlsOzFYrPr0YO1y7vBto+51LN6y9izeNHYs3jR2LN40diz
        eNHYs3jR2LN40dizeNHcsnNJ////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////AUC//wVZ0fNDWNHye1fQ85NayPC/W8jxw1vI
        8cNbyPHDW8jxw1vI8cNXz/OPWNH2N////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////AWio
        6elpndbjaYKqxWmItslplszZaKjp/////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BaaPh32lpgMFofqW9aHmcu2huiL1pntnl////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wFoqOnVaKLf32el5OlppOPlaKLg4Win6Ov///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>