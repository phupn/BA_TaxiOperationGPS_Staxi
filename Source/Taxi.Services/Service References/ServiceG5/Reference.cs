//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Taxi.Services.ServiceG5 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceCancelType", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Servers.Sockets.System.DataTypes")]
    public enum SourceCancelType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCancel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mistake = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypeBase", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Business.DataTypes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Taxi.Services.ServiceG5.VehicleOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Taxi.Services.ServiceG5.LatLng))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Taxi.Services.ServiceG5.AddressInfo))]
    public partial class DataTypeBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleOption", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Servers.Sockets.System.DataTypes")]
    [System.SerializableAttribute()]
    public partial class VehicleOption : Taxi.Services.ServiceG5.DataTypeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle {
            get {
                return this.VehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleField, value) != true)) {
                    this.VehicleField = value;
                    this.RaisePropertyChanged("Vehicle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatLng", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Business.DataTypes")]
    [System.SerializableAttribute()]
    public partial class LatLng : Taxi.Services.ServiceG5.DataTypeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LngField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressInfo", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Business.DataTypes")]
    [System.SerializableAttribute()]
    public partial class AddressInfo : Taxi.Services.ServiceG5.DataTypeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Taxi.Services.ServiceG5.LatLng LatLngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Taxi.Services.ServiceG5.LatLng LatLng {
            get {
                return this.LatLngField;
            }
            set {
                if ((object.ReferenceEquals(this.LatLngField, value) != true)) {
                    this.LatLngField = value;
                    this.RaisePropertyChanged("LatLng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookTripType", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Servers.Sockets.System.DataTypes")]
    public enum BookTripType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Return = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Long = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contract = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Direction", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Business.DataTypes")]
    public enum Direction : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        One = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfirmDoneBook", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Business.DataTypes")]
    public enum ConfirmDoneBook : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DriverCancel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCancel = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissTrip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCar = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperatorCenter.GPSData", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Servers.Sockets.Concretes.OperatorS" +
        "erver")]
    [System.SerializableAttribute()]
    public partial class OperatorCenterGPSData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VelocityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Velocity {
            get {
                return this.VelocityField;
            }
            set {
                if ((this.VelocityField.Equals(value) != true)) {
                    this.VelocityField = value;
                    this.RaisePropertyChanged("Velocity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TcpOP.VehicleResponse", Namespace="http://schemas.datacontract.org/2004/07/Staxi.WebServices.Services")]
    [System.SerializableAttribute()]
    public partial class TcpOPVehicleResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Server_CarType_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehiclePlateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateCode {
            get {
                return this.PrivateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateCodeField, value) != true)) {
                    this.PrivateCodeField = value;
                    this.RaisePropertyChanged("PrivateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Server_CarType_ID {
            get {
                return this.Server_CarType_IDField;
            }
            set {
                if ((this.Server_CarType_IDField.Equals(value) != true)) {
                    this.Server_CarType_IDField = value;
                    this.RaisePropertyChanged("Server_CarType_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehiclePlate {
            get {
                return this.VehiclePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiclePlateField, value) != true)) {
                    this.VehiclePlateField = value;
                    this.RaisePropertyChanged("VehiclePlate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneTaxiCar", Namespace="http://schemas.datacontract.org/2004/07/Staxi.Core.Systems.Hosting")]
    [System.SerializableAttribute()]
    public partial class OneTaxiCar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehiclePlateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Bearing {
            get {
                return this.BearingField;
            }
            set {
                if ((this.BearingField.Equals(value) != true)) {
                    this.BearingField = value;
                    this.RaisePropertyChanged("Bearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehiclePlate {
            get {
                return this.VehiclePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiclePlateField, value) != true)) {
                    this.VehiclePlateField = value;
                    this.RaisePropertyChanged("VehiclePlate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TcpOP.BookTripType", Namespace="http://schemas.datacontract.org/2004/07/Staxi.WebServices.Services")]
    public enum TcpOPBookTripType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Long = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Airport = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TcpOP.Direction", Namespace="http://schemas.datacontract.org/2004/07/Staxi.WebServices.Services")]
    public enum TcpOPDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MotChieu = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HaiChieu = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceG5.IOperationService")]
    public interface IOperationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendACKGetPhone", ReplyAction="http://tempuri.org/IOperationService/SendACKGetPhoneResponse")]
        bool SendACKGetPhone(System.Guid bookId, byte result, string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendACKInvite", ReplyAction="http://tempuri.org/IOperationService/SendACKInviteResponse")]
        bool SendACKInvite(System.Guid bookId, string vehicle, bool result, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendOperatorCancel", ReplyAction="http://tempuri.org/IOperationService/SendOperatorCancelResponse")]
        bool SendOperatorCancel(System.Guid bookId, string msg, Taxi.Services.ServiceG5.SourceCancelType cancelType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendInitTrip", ReplyAction="http://tempuri.org/IOperationService/SendInitTripResponse")]
        bool SendInitTrip(
                    System.Guid bookId, 
                    Taxi.Services.ServiceG5.AddressInfo from, 
                    Taxi.Services.ServiceG5.AddressInfo to, 
                    string note, 
                    byte quantity, 
                    byte carType, 
                    byte customerType, 
                    string phone, 
                    Taxi.Services.ServiceG5.VehicleOption[] vehicleOptions, 
                    Taxi.Services.ServiceG5.LatLng currentLatLng, 
                    string[] lstVehiclesDeny, 
                    Taxi.Services.ServiceG5.BookTripType bookTripType, 
                    int money, 
                    float distance, 
                    Taxi.Services.ServiceG5.Direction direction, 
                    int moneyExtend, 
                    int moneyExtendByTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/RadioInitTrip", ReplyAction="http://tempuri.org/IOperationService/RadioInitTripResponse")]
        bool RadioInitTrip(
                    System.Guid bookId, 
                    Taxi.Services.ServiceG5.AddressInfo from, 
                    Taxi.Services.ServiceG5.AddressInfo to, 
                    string note, 
                    byte quantity, 
                    byte carType, 
                    byte customerType, 
                    string phone, 
                    Taxi.Services.ServiceG5.VehicleOption[] vehicleOptions, 
                    Taxi.Services.ServiceG5.LatLng currentLatLng, 
                    string[] lstVehiclesDeny, 
                    string[] vehiclesOkDone, 
                    string[] vehiclesOkFail, 
                    Taxi.Services.ServiceG5.ConfirmDoneBook state, 
                    Taxi.Services.ServiceG5.BookTripType bookTripType, 
                    int money, 
                    float distance, 
                    Taxi.Services.ServiceG5.Direction direction, 
                    int moneyExtend, 
                    int moneyExtendByTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendLogoutDriver", ReplyAction="http://tempuri.org/IOperationService/SendLogoutDriverResponse")]
        bool SendLogoutDriver(string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendOperatorCatched", ReplyAction="http://tempuri.org/IOperationService/SendOperatorCatchedResponse")]
        bool SendOperatorCatched(System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendMissCar", ReplyAction="http://tempuri.org/IOperationService/SendMissCarResponse")]
        bool SendMissCar(System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendText", ReplyAction="http://tempuri.org/IOperationService/SendTextResponse")]
        bool SendText(string vehiclePlate, string text, System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendConfirmDone", ReplyAction="http://tempuri.org/IOperationService/SendConfirmDoneResponse")]
        bool SendConfirmDone(System.Guid bookId, bool result, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendOperatorCmd", ReplyAction="http://tempuri.org/IOperationService/SendOperatorCmdResponse")]
        bool SendOperatorCmd(string vehiclePlate, System.Guid bookId, int cmdId, string msg, bool result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendACKDriverCmd", ReplyAction="http://tempuri.org/IOperationService/SendACKDriverCmdResponse")]
        bool SendACKDriverCmd(string vehiclePlate, int cmdId, int stepId, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SyncCommand", ReplyAction="http://tempuri.org/IOperationService/SyncCommandResponse")]
        bool SyncCommand();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SyncVehicle", ReplyAction="http://tempuri.org/IOperationService/SyncVehicleResponse")]
        bool SyncVehicle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetVehicleOnlne", ReplyAction="http://tempuri.org/IOperationService/GetVehicleOnlneResponse")]
        Taxi.Services.ServiceG5.OperatorCenterGPSData GetVehicleOnlne(string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/UpdateVehicleToNotSync", ReplyAction="http://tempuri.org/IOperationService/UpdateVehicleToNotSyncResponse")]
        bool UpdateVehicleToNotSync(string[] vehicles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/IsOperatorClientConnecting", ReplyAction="http://tempuri.org/IOperationService/IsOperatorClientConnectingResponse")]
        bool IsOperatorClientConnecting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetVehicle", ReplyAction="http://tempuri.org/IOperationService/GetVehicleResponse")]
        Taxi.Services.ServiceG5.TcpOPVehicleResponse GetVehicle(string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetCarType", ReplyAction="http://tempuri.org/IOperationService/GetCarTypeResponse")]
        void GetCarType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendWrongCustomer", ReplyAction="http://tempuri.org/IOperationService/SendWrongCustomerResponse")]
        bool SendWrongCustomer(System.Guid bookId, string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendConfirmDoneBook", ReplyAction="http://tempuri.org/IOperationService/SendConfirmDoneBookResponse")]
        bool SendConfirmDoneBook(System.Guid bookId, string vehiclePlate, Taxi.Services.ServiceG5.ConfirmDoneBook state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendDeleteBook", ReplyAction="http://tempuri.org/IOperationService/SendDeleteBookResponse")]
        bool SendDeleteBook(System.Guid[] bookIds, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetBookStatus", ReplyAction="http://tempuri.org/IOperationService/GetBookStatusResponse")]
        void GetBookStatus(System.Guid[] bookids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendOperatorDispatched", ReplyAction="http://tempuri.org/IOperationService/SendOperatorDispatchedResponse")]
        bool SendOperatorDispatched(System.Guid bookId, string vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendAskBook", ReplyAction="http://tempuri.org/IOperationService/SendAskBookResponse")]
        bool SendAskBook(System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/FindCar", ReplyAction="http://tempuri.org/IOperationService/FindCarResponse")]
        Taxi.Services.ServiceG5.OneTaxiCar[] FindCar(int carType, float lat, float lng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendSMS_ReceiveCarInfo", ReplyAction="http://tempuri.org/IOperationService/SendSMS_ReceiveCarInfoResponse")]
        bool SendSMS_ReceiveCarInfo(System.Guid bookId, string mobile, string carNo, string vehiclePlate, string driverName, string driverPhone, Taxi.Services.ServiceG5.TcpOPBookTripType tripType, string carNoOld);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendSMS_ReceiveCatchedUser", ReplyAction="http://tempuri.org/IOperationService/SendSMS_ReceiveCatchedUserResponse")]
        bool SendSMS_ReceiveCatchedUser(System.Guid bookId, string mobile, string carNo, int money, Taxi.Services.ServiceG5.TcpOPBookTripType tripType, int giaPhuTroi, int quangduong, Taxi.Services.ServiceG5.TcpOPDirection dir, string param6, string param7, string param8, string param9, string param10);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendSMS_ReceiveDriverCancel", ReplyAction="http://tempuri.org/IOperationService/SendSMS_ReceiveDriverCancelResponse")]
        bool SendSMS_ReceiveDriverCancel(System.Guid bookId, string mobile, string carNo, Taxi.Services.ServiceG5.TcpOPBookTripType tripType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/SendSMS_ReceiveNoCar", ReplyAction="http://tempuri.org/IOperationService/SendSMS_ReceiveNoCarResponse")]
        bool SendSMS_ReceiveNoCar(System.Guid bookId, string mobile, Taxi.Services.ServiceG5.TcpOPBookTripType tripType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOperationServiceChannel : Taxi.Services.ServiceG5.IOperationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OperationServiceClient : System.ServiceModel.ClientBase<Taxi.Services.ServiceG5.IOperationService>, Taxi.Services.ServiceG5.IOperationService {
        
        public OperationServiceClient() {
        }
        
        public OperationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OperationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendACKGetPhone(System.Guid bookId, byte result, string vehicle) {
            return base.Channel.SendACKGetPhone(bookId, result, vehicle);
        }
        
        public bool SendACKInvite(System.Guid bookId, string vehicle, bool result, string msg) {
            return base.Channel.SendACKInvite(bookId, vehicle, result, msg);
        }
        
        public bool SendOperatorCancel(System.Guid bookId, string msg, Taxi.Services.ServiceG5.SourceCancelType cancelType) {
            return base.Channel.SendOperatorCancel(bookId, msg, cancelType);
        }
        
        public bool SendInitTrip(
                    System.Guid bookId, 
                    Taxi.Services.ServiceG5.AddressInfo from, 
                    Taxi.Services.ServiceG5.AddressInfo to, 
                    string note, 
                    byte quantity, 
                    byte carType, 
                    byte customerType, 
                    string phone, 
                    Taxi.Services.ServiceG5.VehicleOption[] vehicleOptions, 
                    Taxi.Services.ServiceG5.LatLng currentLatLng, 
                    string[] lstVehiclesDeny, 
                    Taxi.Services.ServiceG5.BookTripType bookTripType, 
                    int money, 
                    float distance, 
                    Taxi.Services.ServiceG5.Direction direction, 
                    int moneyExtend, 
                    int moneyExtendByTime) {
            return base.Channel.SendInitTrip(bookId, from, to, note, quantity, carType, customerType, phone, vehicleOptions, currentLatLng, lstVehiclesDeny, bookTripType, money, distance, direction, moneyExtend, moneyExtendByTime);
        }
        
        public bool RadioInitTrip(
                    System.Guid bookId, 
                    Taxi.Services.ServiceG5.AddressInfo from, 
                    Taxi.Services.ServiceG5.AddressInfo to, 
                    string note, 
                    byte quantity, 
                    byte carType, 
                    byte customerType, 
                    string phone, 
                    Taxi.Services.ServiceG5.VehicleOption[] vehicleOptions, 
                    Taxi.Services.ServiceG5.LatLng currentLatLng, 
                    string[] lstVehiclesDeny, 
                    string[] vehiclesOkDone, 
                    string[] vehiclesOkFail, 
                    Taxi.Services.ServiceG5.ConfirmDoneBook state, 
                    Taxi.Services.ServiceG5.BookTripType bookTripType, 
                    int money, 
                    float distance, 
                    Taxi.Services.ServiceG5.Direction direction, 
                    int moneyExtend, 
                    int moneyExtendByTime) {
            return base.Channel.RadioInitTrip(bookId, from, to, note, quantity, carType, customerType, phone, vehicleOptions, currentLatLng, lstVehiclesDeny, vehiclesOkDone, vehiclesOkFail, state, bookTripType, money, distance, direction, moneyExtend, moneyExtendByTime);
        }
        
        public bool SendLogoutDriver(string vehicle) {
            return base.Channel.SendLogoutDriver(vehicle);
        }
        
        public bool SendOperatorCatched(System.Guid bookId) {
            return base.Channel.SendOperatorCatched(bookId);
        }
        
        public bool SendMissCar(System.Guid bookId) {
            return base.Channel.SendMissCar(bookId);
        }
        
        public bool SendText(string vehiclePlate, string text, System.Guid bookId) {
            return base.Channel.SendText(vehiclePlate, text, bookId);
        }
        
        public bool SendConfirmDone(System.Guid bookId, bool result, string msg) {
            return base.Channel.SendConfirmDone(bookId, result, msg);
        }
        
        public bool SendOperatorCmd(string vehiclePlate, System.Guid bookId, int cmdId, string msg, bool result) {
            return base.Channel.SendOperatorCmd(vehiclePlate, bookId, cmdId, msg, result);
        }
        
        public bool SendACKDriverCmd(string vehiclePlate, int cmdId, int stepId, bool status) {
            return base.Channel.SendACKDriverCmd(vehiclePlate, cmdId, stepId, status);
        }
        
        public bool SyncCommand() {
            return base.Channel.SyncCommand();
        }
        
        public bool SyncVehicle() {
            return base.Channel.SyncVehicle();
        }
        
        public Taxi.Services.ServiceG5.OperatorCenterGPSData GetVehicleOnlne(string vehicle) {
            return base.Channel.GetVehicleOnlne(vehicle);
        }
        
        public bool UpdateVehicleToNotSync(string[] vehicles) {
            return base.Channel.UpdateVehicleToNotSync(vehicles);
        }
        
        public bool IsOperatorClientConnecting() {
            return base.Channel.IsOperatorClientConnecting();
        }
        
        public Taxi.Services.ServiceG5.TcpOPVehicleResponse GetVehicle(string vehicle) {
            return base.Channel.GetVehicle(vehicle);
        }
        
        public void GetCarType() {
            base.Channel.GetCarType();
        }
        
        public bool SendWrongCustomer(System.Guid bookId, string vehicle) {
            return base.Channel.SendWrongCustomer(bookId, vehicle);
        }
        
        public bool SendConfirmDoneBook(System.Guid bookId, string vehiclePlate, Taxi.Services.ServiceG5.ConfirmDoneBook state) {
            return base.Channel.SendConfirmDoneBook(bookId, vehiclePlate, state);
        }
        
        public bool SendDeleteBook(System.Guid[] bookIds, string userName) {
            return base.Channel.SendDeleteBook(bookIds, userName);
        }
        
        public void GetBookStatus(System.Guid[] bookids) {
            base.Channel.GetBookStatus(bookids);
        }
        
        public bool SendOperatorDispatched(System.Guid bookId, string vehicle) {
            return base.Channel.SendOperatorDispatched(bookId, vehicle);
        }
        
        public bool SendAskBook(System.Guid bookId) {
            return base.Channel.SendAskBook(bookId);
        }
        
        public Taxi.Services.ServiceG5.OneTaxiCar[] FindCar(int carType, float lat, float lng) {
            return base.Channel.FindCar(carType, lat, lng);
        }
        
        public bool SendSMS_ReceiveCarInfo(System.Guid bookId, string mobile, string carNo, string vehiclePlate, string driverName, string driverPhone, Taxi.Services.ServiceG5.TcpOPBookTripType tripType, string carNoOld) {
            return base.Channel.SendSMS_ReceiveCarInfo(bookId, mobile, carNo, vehiclePlate, driverName, driverPhone, tripType, carNoOld);
        }
        
        public bool SendSMS_ReceiveCatchedUser(System.Guid bookId, string mobile, string carNo, int money, Taxi.Services.ServiceG5.TcpOPBookTripType tripType, int giaPhuTroi, int quangduong, Taxi.Services.ServiceG5.TcpOPDirection dir, string param6, string param7, string param8, string param9, string param10) {
            return base.Channel.SendSMS_ReceiveCatchedUser(bookId, mobile, carNo, money, tripType, giaPhuTroi, quangduong, dir, param6, param7, param8, param9, param10);
        }
        
        public bool SendSMS_ReceiveDriverCancel(System.Guid bookId, string mobile, string carNo, Taxi.Services.ServiceG5.TcpOPBookTripType tripType) {
            return base.Channel.SendSMS_ReceiveDriverCancel(bookId, mobile, carNo, tripType);
        }
        
        public bool SendSMS_ReceiveNoCar(System.Guid bookId, string mobile, Taxi.Services.ServiceG5.TcpOPBookTripType tripType) {
            return base.Channel.SendSMS_ReceiveNoCar(bookId, mobile, tripType);
        }
    }
}
